pipeline {
    agent any
    
    environment {
       // Ensure Docker is in the PATH for Jenkins to use it
       PATH = "C:\\WINDOWS\\SYSTEM32;C:\\Program Files\\Docker\\Docker\\resources\\bin"
       
       // The credentials ID that contains your Docker Hub username and PAT
       DOCKERHUB_CREDENTIALS = credentials('docker-hub-credentials')
       
       // Set Docker image name using Docker Hub username and build number
       DOCKER_IMAGE = "${DOCKERHUB_CREDENTIALS_USR}/awwin:${env.BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image with the provided tag
                    bat "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }

        stage('Security Scan with Grype') {
            steps {
                script {
                    // Run a Grype security scan on the built Docker image
                    bat "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock anchore/grype ${DOCKER_IMAGE}"
                }
            }
        }
        
        stage('Login to DockerHub') {
            steps {
                script {
                    // Login to Docker Hub using the stored credentials (username and PAT)
                    bat "docker login -u ${DOCKERHUB_CREDENTIALS_USR} -p ${DOCKERHUB_CREDENTIALS_PSW}"
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    // Push the Docker image to Docker Hub
                    bat "docker push ${DOCKER_IMAGE}"
                }
            }
        }

        stage('Deploy Backend') {
            steps {
                script {
                    // Deploy the Spring backend app using the built Docker image
                    bat "docker run -d -p 8081:8081 spring-app"
                }
            }
        }

        stage('Deploy Frontend') {
            steps {
                script {
                    // Deploy the Angular frontend app using the built Docker image
                    bat "docker run -d -p 4201:80 ${DOCKER_IMAGE}"
                }
            }
        }
    }

    post {
        always {
            // Ensure that Docker Hub logout happens after the pipeline completes
            bat "docker logout"
        }
    }
}
